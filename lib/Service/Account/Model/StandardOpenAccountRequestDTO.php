<?php
/**
 * StandardOpenAccountRequestDTO
 *
 * PHP version 5
 *
 * @category Class
 * @package  Yeepay\Yop\Sdk\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 账户
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Yeepay\Yop\Sdk\Service\Account\Model;

use \ArrayAccess;
use Yeepay\Yop\Sdk\Model\ModelInterface;
use Yeepay\Yop\Sdk\Utils\ObjectSerializer;

/**
 * StandardOpenAccountRequestDTO Class Doc Comment
 *
 * @category Class
 * @description 开立银行账户请求
 * @package  Yeepay\Yop\Sdk\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class StandardOpenAccountRequestDTO implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'StandardOpenAccountRequestDTO';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'requestNo' => 'string',
        'parentMerchantNo' => 'string',
        'merchantNo' => 'string',
        'merchantName' => 'string',
        'openBankCode' => 'string',
        'certificateType' => 'string',
        'certificateNo' => 'string',
        'notifyUrl' => 'string',
        'xibOpenAccountDTO' => '\Yeepay\Yop\Sdk\Service\Account\Model\XibOpenAccountDTO',
        'htbOpenAccountDTO' => '\Yeepay\Yop\Sdk\Service\Account\Model\HtbOpenAccountDTO',
        'jsbcOpenAccountDTO' => '\Yeepay\Yop\Sdk\Service\Account\Model\JsbcOpenAccountDTO',
        'whzbbOpenAccountDTO' => '\Yeepay\Yop\Sdk\Service\Account\Model\WhzbbOpenAccountDTO',
        'xwbOpenAccountDTO' => '\Yeepay\Yop\Sdk\Service\Account\Model\XwbOpenAccountDTO',
        'snOpenAccountDTO' => '\Yeepay\Yop\Sdk\Service\Account\Model\SnOpenAccountDTO'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'requestNo' => null,
        'parentMerchantNo' => null,
        'merchantNo' => null,
        'merchantName' => null,
        'openBankCode' => null,
        'certificateType' => null,
        'certificateNo' => null,
        'notifyUrl' => null,
        'xibOpenAccountDTO' => null,
        'htbOpenAccountDTO' => null,
        'jsbcOpenAccountDTO' => null,
        'whzbbOpenAccountDTO' => null,
        'xwbOpenAccountDTO' => null,
        'snOpenAccountDTO' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'requestNo' => 'requestNo',
        'parentMerchantNo' => 'parentMerchantNo',
        'merchantNo' => 'merchantNo',
        'merchantName' => 'merchantName',
        'openBankCode' => 'openBankCode',
        'certificateType' => 'certificateType',
        'certificateNo' => 'certificateNo',
        'notifyUrl' => 'notifyUrl',
        'xibOpenAccountDTO' => 'xibOpenAccountDTO',
        'htbOpenAccountDTO' => 'htbOpenAccountDTO',
        'jsbcOpenAccountDTO' => 'jsbcOpenAccountDTO',
        'whzbbOpenAccountDTO' => 'whzbbOpenAccountDTO',
        'xwbOpenAccountDTO' => 'xwbOpenAccountDTO',
        'snOpenAccountDTO' => 'snOpenAccountDTO'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'requestNo' => 'setRequestNo',
        'parentMerchantNo' => 'setParentMerchantNo',
        'merchantNo' => 'setMerchantNo',
        'merchantName' => 'setMerchantName',
        'openBankCode' => 'setOpenBankCode',
        'certificateType' => 'setCertificateType',
        'certificateNo' => 'setCertificateNo',
        'notifyUrl' => 'setNotifyUrl',
        'xibOpenAccountDTO' => 'setXibOpenAccountDTO',
        'htbOpenAccountDTO' => 'setHtbOpenAccountDTO',
        'jsbcOpenAccountDTO' => 'setJsbcOpenAccountDTO',
        'whzbbOpenAccountDTO' => 'setWhzbbOpenAccountDTO',
        'xwbOpenAccountDTO' => 'setXwbOpenAccountDTO',
        'snOpenAccountDTO' => 'setSnOpenAccountDTO'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'requestNo' => 'getRequestNo',
        'parentMerchantNo' => 'getParentMerchantNo',
        'merchantNo' => 'getMerchantNo',
        'merchantName' => 'getMerchantName',
        'openBankCode' => 'getOpenBankCode',
        'certificateType' => 'getCertificateType',
        'certificateNo' => 'getCertificateNo',
        'notifyUrl' => 'getNotifyUrl',
        'xibOpenAccountDTO' => 'getXibOpenAccountDTO',
        'htbOpenAccountDTO' => 'getHtbOpenAccountDTO',
        'jsbcOpenAccountDTO' => 'getJsbcOpenAccountDTO',
        'whzbbOpenAccountDTO' => 'getWhzbbOpenAccountDTO',
        'xwbOpenAccountDTO' => 'getXwbOpenAccountDTO',
        'snOpenAccountDTO' => 'getSnOpenAccountDTO'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['requestNo'] = isset($data['requestNo']) ? $data['requestNo'] : null;
        $this->container['parentMerchantNo'] = isset($data['parentMerchantNo']) ? $data['parentMerchantNo'] : null;
        $this->container['merchantNo'] = isset($data['merchantNo']) ? $data['merchantNo'] : null;
        $this->container['merchantName'] = isset($data['merchantName']) ? $data['merchantName'] : null;
        $this->container['openBankCode'] = isset($data['openBankCode']) ? $data['openBankCode'] : null;
        $this->container['certificateType'] = isset($data['certificateType']) ? $data['certificateType'] : null;
        $this->container['certificateNo'] = isset($data['certificateNo']) ? $data['certificateNo'] : null;
        $this->container['notifyUrl'] = isset($data['notifyUrl']) ? $data['notifyUrl'] : null;
        $this->container['xibOpenAccountDTO'] = isset($data['xibOpenAccountDTO']) ? $data['xibOpenAccountDTO'] : null;
        $this->container['htbOpenAccountDTO'] = isset($data['htbOpenAccountDTO']) ? $data['htbOpenAccountDTO'] : null;
        $this->container['jsbcOpenAccountDTO'] = isset($data['jsbcOpenAccountDTO']) ? $data['jsbcOpenAccountDTO'] : null;
        $this->container['whzbbOpenAccountDTO'] = isset($data['whzbbOpenAccountDTO']) ? $data['whzbbOpenAccountDTO'] : null;
        $this->container['xwbOpenAccountDTO'] = isset($data['xwbOpenAccountDTO']) ? $data['xwbOpenAccountDTO'] : null;
        $this->container['snOpenAccountDTO'] = isset($data['snOpenAccountDTO']) ? $data['snOpenAccountDTO'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['requestNo'] === null) {
            $invalidProperties[] = "'requestNo' can't be null";
        }
        if ($this->container['parentMerchantNo'] === null) {
            $invalidProperties[] = "'parentMerchantNo' can't be null";
        }
        if ($this->container['merchantNo'] === null) {
            $invalidProperties[] = "'merchantNo' can't be null";
        }
        if ($this->container['merchantName'] === null) {
            $invalidProperties[] = "'merchantName' can't be null";
        }
        if ($this->container['openBankCode'] === null) {
            $invalidProperties[] = "'openBankCode' can't be null";
        }
        if ($this->container['notifyUrl'] === null) {
            $invalidProperties[] = "'notifyUrl' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets requestNo
     *
     * @return string
     */
    public function getRequestNo()
    {
        return $this->container['requestNo'];
    }

    /**
     * Sets requestNo
     *
     * @param string $requestNo 商户订单号
     *
     * @return $this
     */
    public function setRequestNo($requestNo)
    {
        $this->container['requestNo'] = $requestNo;

        return $this;
    }

    /**
     * Gets parentMerchantNo
     *
     * @return string
     */
    public function getParentMerchantNo()
    {
        return $this->container['parentMerchantNo'];
    }

    /**
     * Sets parentMerchantNo
     *
     * @param string $parentMerchantNo 业务发起方商编<br>*标准商户收付款方案中此参数与开户商户编号一致；*平台商户收付款方案中此参数为平台商商户编号；*服务商解决方案中，①所属标准商户申请开户时，该参数为服务商商编 ②所属平台商申请开户且以服务资质在银行开立母户时，此参数填写服务商商户编号 ②所属平台商入驻商户申请开户时需以平台资质在银行开立母户，该参数填写平台商商编
     *
     * @return $this
     */
    public function setParentMerchantNo($parentMerchantNo)
    {
        $this->container['parentMerchantNo'] = $parentMerchantNo;

        return $this;
    }

    /**
     * Gets merchantNo
     *
     * @return string
     */
    public function getMerchantNo()
    {
        return $this->container['merchantNo'];
    }

    /**
     * Sets merchantNo
     *
     * @param string $merchantNo 商户编号<br>易宝支付分配的的商户唯一标识
     *
     * @return $this
     */
    public function setMerchantNo($merchantNo)
    {
        $this->container['merchantNo'] = $merchantNo;

        return $this;
    }

    /**
     * Gets merchantName
     *
     * @return string
     */
    public function getMerchantName()
    {
        return $this->container['merchantName'];
    }

    /**
     * Sets merchantName
     *
     * @param string $merchantName 商编名称<br>请传商户编号对应的商户签约名，与营业执照保持一致
     *
     * @return $this
     */
    public function setMerchantName($merchantName)
    {
        $this->container['merchantName'] = $merchantName;

        return $this;
    }

    /**
     * Gets openBankCode
     *
     * @return string
     */
    public function getOpenBankCode()
    {
        return $this->container['openBankCode'];
    }

    /**
     * Sets openBankCode
     *
     * @param string $openBankCode <p>开户银行编码<br />可选项如下:<br />XIB<br />FJHTB<br />JSBCHINA<br />WHZBB<br />XWB</p> <pre>SUNINGBANK</pre>
     *
     * @return $this
     */
    public function setOpenBankCode($openBankCode)
    {
        $this->container['openBankCode'] = $openBankCode;

        return $this;
    }

    /**
     * Gets certificateType
     *
     * @return string
     */
    public function getCertificateType()
    {
        return $this->container['certificateType'];
    }

    /**
     * Sets certificateType
     *
     * @param string $certificateType 证件类型<br>可选项如下:<br>BUSINESS_LICENCE:营业执照<br>(银行编码为XIB,FJHTB,WHZBB,XWB时必填)
     *
     * @return $this
     */
    public function setCertificateType($certificateType)
    {
        $this->container['certificateType'] = $certificateType;

        return $this;
    }

    /**
     * Gets certificateNo
     *
     * @return string
     */
    public function getCertificateNo()
    {
        return $this->container['certificateNo'];
    }

    /**
     * Sets certificateNo
     *
     * @param string $certificateNo 证件号<br>(银行编码为XIB,FJHTB,WHZBB,XWB时必填）
     *
     * @return $this
     */
    public function setCertificateNo($certificateNo)
    {
        $this->container['certificateNo'] = $certificateNo;

        return $this;
    }

    /**
     * Gets notifyUrl
     *
     * @return string
     */
    public function getNotifyUrl()
    {
        return $this->container['notifyUrl'];
    }

    /**
     * Sets notifyUrl
     *
     * @param string $notifyUrl 回调通知地址<br>回调内容请参看：<a href=\"#anchor7\">开立银行账户结果通知</a>
     *
     * @return $this
     */
    public function setNotifyUrl($notifyUrl)
    {
        $this->container['notifyUrl'] = $notifyUrl;

        return $this;
    }

    /**
     * Gets xibOpenAccountDTO
     *
     * @return \Yeepay\Yop\Sdk\Service\Account\Model\XibOpenAccountDTO
     */
    public function getXibOpenAccountDTO()
    {
        return $this->container['xibOpenAccountDTO'];
    }

    /**
     * Sets xibOpenAccountDTO
     *
     * @param \Yeepay\Yop\Sdk\Service\Account\Model\XibOpenAccountDTO $xibOpenAccountDTO xibOpenAccountDTO
     *
     * @return $this
     */
    public function setXibOpenAccountDTO($xibOpenAccountDTO)
    {
        $this->container['xibOpenAccountDTO'] = $xibOpenAccountDTO;

        return $this;
    }

    /**
     * Gets htbOpenAccountDTO
     *
     * @return \Yeepay\Yop\Sdk\Service\Account\Model\HtbOpenAccountDTO
     */
    public function getHtbOpenAccountDTO()
    {
        return $this->container['htbOpenAccountDTO'];
    }

    /**
     * Sets htbOpenAccountDTO
     *
     * @param \Yeepay\Yop\Sdk\Service\Account\Model\HtbOpenAccountDTO $htbOpenAccountDTO htbOpenAccountDTO
     *
     * @return $this
     */
    public function setHtbOpenAccountDTO($htbOpenAccountDTO)
    {
        $this->container['htbOpenAccountDTO'] = $htbOpenAccountDTO;

        return $this;
    }

    /**
     * Gets jsbcOpenAccountDTO
     *
     * @return \Yeepay\Yop\Sdk\Service\Account\Model\JsbcOpenAccountDTO
     */
    public function getJsbcOpenAccountDTO()
    {
        return $this->container['jsbcOpenAccountDTO'];
    }

    /**
     * Sets jsbcOpenAccountDTO
     *
     * @param \Yeepay\Yop\Sdk\Service\Account\Model\JsbcOpenAccountDTO $jsbcOpenAccountDTO jsbcOpenAccountDTO
     *
     * @return $this
     */
    public function setJsbcOpenAccountDTO($jsbcOpenAccountDTO)
    {
        $this->container['jsbcOpenAccountDTO'] = $jsbcOpenAccountDTO;

        return $this;
    }

    /**
     * Gets whzbbOpenAccountDTO
     *
     * @return \Yeepay\Yop\Sdk\Service\Account\Model\WhzbbOpenAccountDTO
     */
    public function getWhzbbOpenAccountDTO()
    {
        return $this->container['whzbbOpenAccountDTO'];
    }

    /**
     * Sets whzbbOpenAccountDTO
     *
     * @param \Yeepay\Yop\Sdk\Service\Account\Model\WhzbbOpenAccountDTO $whzbbOpenAccountDTO whzbbOpenAccountDTO
     *
     * @return $this
     */
    public function setWhzbbOpenAccountDTO($whzbbOpenAccountDTO)
    {
        $this->container['whzbbOpenAccountDTO'] = $whzbbOpenAccountDTO;

        return $this;
    }

    /**
     * Gets xwbOpenAccountDTO
     *
     * @return \Yeepay\Yop\Sdk\Service\Account\Model\XwbOpenAccountDTO
     */
    public function getXwbOpenAccountDTO()
    {
        return $this->container['xwbOpenAccountDTO'];
    }

    /**
     * Sets xwbOpenAccountDTO
     *
     * @param \Yeepay\Yop\Sdk\Service\Account\Model\XwbOpenAccountDTO $xwbOpenAccountDTO xwbOpenAccountDTO
     *
     * @return $this
     */
    public function setXwbOpenAccountDTO($xwbOpenAccountDTO)
    {
        $this->container['xwbOpenAccountDTO'] = $xwbOpenAccountDTO;

        return $this;
    }

    /**
     * Gets snOpenAccountDTO
     *
     * @return \Yeepay\Yop\Sdk\Service\Account\Model\SnOpenAccountDTO
     */
    public function getSnOpenAccountDTO()
    {
        return $this->container['snOpenAccountDTO'];
    }

    /**
     * Sets snOpenAccountDTO
     *
     * @param \Yeepay\Yop\Sdk\Service\Account\Model\SnOpenAccountDTO $snOpenAccountDTO snOpenAccountDTO
     *
     * @return $this
     */
    public function setSnOpenAccountDTO($snOpenAccountDTO)
    {
        $this->container['snOpenAccountDTO'] = $snOpenAccountDTO;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


