<?php
/**
 * UpopActivescanQuerypayresultOpenQueryActiveScanPayResultResponseDTOResult
 *
 * PHP version 5
 *
 * @category Class
 * @package  Yeepay\Yop\Sdk\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 前置收银台
 *
 * <p>前置收银台</p>
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Yeepay\Yop\Sdk\Service\Frontcashier\Model;

use \ArrayAccess;
use Yeepay\Yop\Sdk\Model\ModelInterface;
use Yeepay\Yop\Sdk\Utils\ObjectSerializer;

/**
 * UpopActivescanQuerypayresultOpenQueryActiveScanPayResultResponseDTOResult Class Doc Comment
 *
 * @category Class
 * @package  Yeepay\Yop\Sdk\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UpopActivescanQuerypayresultOpenQueryActiveScanPayResultResponseDTOResult implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'UpopActivescanQuerypayresultOpenQueryActiveScanPayResultResponseDTOResult';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'code' => 'string',
        'message' => 'string',
        'origCode' => 'string',
        'origMessage' => 'string',
        'payOrderNo' => 'string',
        'realTradeAmount' => 'float',
        'totalRefundAmount' => 'float',
        'payeeMerchantId' => 'string',
        'payeeMerchantName' => 'string',
        'payeeMCC' => 'string',
        'status' => 'string',
        'couponInfo' => 'string',
        'origTxnAmt' => 'float',
        'totalRefundOrigTxnAmt' => 'float',
        'refundTradeDetailList' => '\Yeepay\Yop\Sdk\Service\Frontcashier\Model\UpopActivescanQuerypayresultRefundTradeDetailResponseDTOResult[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'code' => null,
        'message' => null,
        'origCode' => null,
        'origMessage' => null,
        'payOrderNo' => null,
        'realTradeAmount' => null,
        'totalRefundAmount' => null,
        'payeeMerchantId' => null,
        'payeeMerchantName' => null,
        'payeeMCC' => null,
        'status' => null,
        'couponInfo' => null,
        'origTxnAmt' => null,
        'totalRefundOrigTxnAmt' => null,
        'refundTradeDetailList' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'code' => 'code',
        'message' => 'message',
        'origCode' => 'origCode',
        'origMessage' => 'origMessage',
        'payOrderNo' => 'payOrderNo',
        'realTradeAmount' => 'realTradeAmount',
        'totalRefundAmount' => 'totalRefundAmount',
        'payeeMerchantId' => 'payeeMerchantId',
        'payeeMerchantName' => 'payeeMerchantName',
        'payeeMCC' => 'payeeMCC',
        'status' => 'status',
        'couponInfo' => 'couponInfo',
        'origTxnAmt' => 'origTxnAmt',
        'totalRefundOrigTxnAmt' => 'totalRefundOrigTxnAmt',
        'refundTradeDetailList' => 'refundTradeDetailList'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'code' => 'setCode',
        'message' => 'setMessage',
        'origCode' => 'setOrigCode',
        'origMessage' => 'setOrigMessage',
        'payOrderNo' => 'setPayOrderNo',
        'realTradeAmount' => 'setRealTradeAmount',
        'totalRefundAmount' => 'setTotalRefundAmount',
        'payeeMerchantId' => 'setPayeeMerchantId',
        'payeeMerchantName' => 'setPayeeMerchantName',
        'payeeMCC' => 'setPayeeMCC',
        'status' => 'setStatus',
        'couponInfo' => 'setCouponInfo',
        'origTxnAmt' => 'setOrigTxnAmt',
        'totalRefundOrigTxnAmt' => 'setTotalRefundOrigTxnAmt',
        'refundTradeDetailList' => 'setRefundTradeDetailList'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'code' => 'getCode',
        'message' => 'getMessage',
        'origCode' => 'getOrigCode',
        'origMessage' => 'getOrigMessage',
        'payOrderNo' => 'getPayOrderNo',
        'realTradeAmount' => 'getRealTradeAmount',
        'totalRefundAmount' => 'getTotalRefundAmount',
        'payeeMerchantId' => 'getPayeeMerchantId',
        'payeeMerchantName' => 'getPayeeMerchantName',
        'payeeMCC' => 'getPayeeMCC',
        'status' => 'getStatus',
        'couponInfo' => 'getCouponInfo',
        'origTxnAmt' => 'getOrigTxnAmt',
        'totalRefundOrigTxnAmt' => 'getTotalRefundOrigTxnAmt',
        'refundTradeDetailList' => 'getRefundTradeDetailList'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['code'] = isset($data['code']) ? $data['code'] : null;
        $this->container['message'] = isset($data['message']) ? $data['message'] : null;
        $this->container['origCode'] = isset($data['origCode']) ? $data['origCode'] : null;
        $this->container['origMessage'] = isset($data['origMessage']) ? $data['origMessage'] : null;
        $this->container['payOrderNo'] = isset($data['payOrderNo']) ? $data['payOrderNo'] : null;
        $this->container['realTradeAmount'] = isset($data['realTradeAmount']) ? $data['realTradeAmount'] : null;
        $this->container['totalRefundAmount'] = isset($data['totalRefundAmount']) ? $data['totalRefundAmount'] : null;
        $this->container['payeeMerchantId'] = isset($data['payeeMerchantId']) ? $data['payeeMerchantId'] : null;
        $this->container['payeeMerchantName'] = isset($data['payeeMerchantName']) ? $data['payeeMerchantName'] : null;
        $this->container['payeeMCC'] = isset($data['payeeMCC']) ? $data['payeeMCC'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['couponInfo'] = isset($data['couponInfo']) ? $data['couponInfo'] : null;
        $this->container['origTxnAmt'] = isset($data['origTxnAmt']) ? $data['origTxnAmt'] : null;
        $this->container['totalRefundOrigTxnAmt'] = isset($data['totalRefundOrigTxnAmt']) ? $data['totalRefundOrigTxnAmt'] : null;
        $this->container['refundTradeDetailList'] = isset($data['refundTradeDetailList']) ? $data['refundTradeDetailList'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string $code 错误码
     *
     * @return $this
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets message
     *
     * @return string
     */
    public function getMessage()
    {
        return $this->container['message'];
    }

    /**
     * Sets message
     *
     * @param string $message 错误码描述
     *
     * @return $this
     */
    public function setMessage($message)
    {
        $this->container['message'] = $message;

        return $this;
    }

    /**
     * Gets origCode
     *
     * @return string
     */
    public function getOrigCode()
    {
        return $this->container['origCode'];
    }

    /**
     * Sets origCode
     *
     * @param string $origCode 失败错误码
     *
     * @return $this
     */
    public function setOrigCode($origCode)
    {
        $this->container['origCode'] = $origCode;

        return $this;
    }

    /**
     * Gets origMessage
     *
     * @return string
     */
    public function getOrigMessage()
    {
        return $this->container['origMessage'];
    }

    /**
     * Sets origMessage
     *
     * @param string $origMessage 失败错误描述
     *
     * @return $this
     */
    public function setOrigMessage($origMessage)
    {
        $this->container['origMessage'] = $origMessage;

        return $this;
    }

    /**
     * Gets payOrderNo
     *
     * @return string
     */
    public function getPayOrderNo()
    {
        return $this->container['payOrderNo'];
    }

    /**
     * Sets payOrderNo
     *
     * @param string $payOrderNo 付款订单号
     *
     * @return $this
     */
    public function setPayOrderNo($payOrderNo)
    {
        $this->container['payOrderNo'] = $payOrderNo;

        return $this;
    }

    /**
     * Gets realTradeAmount
     *
     * @return float
     */
    public function getRealTradeAmount()
    {
        return $this->container['realTradeAmount'];
    }

    /**
     * Sets realTradeAmount
     *
     * @param float $realTradeAmount 实际付款金额
     *
     * @return $this
     */
    public function setRealTradeAmount($realTradeAmount)
    {
        $this->container['realTradeAmount'] = $realTradeAmount;

        return $this;
    }

    /**
     * Gets totalRefundAmount
     *
     * @return float
     */
    public function getTotalRefundAmount()
    {
        return $this->container['totalRefundAmount'];
    }

    /**
     * Sets totalRefundAmount
     *
     * @param float $totalRefundAmount 总退款金额
     *
     * @return $this
     */
    public function setTotalRefundAmount($totalRefundAmount)
    {
        $this->container['totalRefundAmount'] = $totalRefundAmount;

        return $this;
    }

    /**
     * Gets payeeMerchantId
     *
     * @return string
     */
    public function getPayeeMerchantId()
    {
        return $this->container['payeeMerchantId'];
    }

    /**
     * Sets payeeMerchantId
     *
     * @param string $payeeMerchantId 收款商户号
     *
     * @return $this
     */
    public function setPayeeMerchantId($payeeMerchantId)
    {
        $this->container['payeeMerchantId'] = $payeeMerchantId;

        return $this;
    }

    /**
     * Gets payeeMerchantName
     *
     * @return string
     */
    public function getPayeeMerchantName()
    {
        return $this->container['payeeMerchantName'];
    }

    /**
     * Sets payeeMerchantName
     *
     * @param string $payeeMerchantName 收款商户名称
     *
     * @return $this
     */
    public function setPayeeMerchantName($payeeMerchantName)
    {
        $this->container['payeeMerchantName'] = $payeeMerchantName;

        return $this;
    }

    /**
     * Gets payeeMCC
     *
     * @return string
     */
    public function getPayeeMCC()
    {
        return $this->container['payeeMCC'];
    }

    /**
     * Sets payeeMCC
     *
     * @param string $payeeMCC 收款方MCC
     *
     * @return $this
     */
    public function setPayeeMCC($payeeMCC)
    {
        $this->container['payeeMCC'] = $payeeMCC;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status 订单状态
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets couponInfo
     *
     * @return string
     */
    public function getCouponInfo()
    {
        return $this->container['couponInfo'];
    }

    /**
     * Sets couponInfo
     *
     * @param string $couponInfo 营销信息
     *
     * @return $this
     */
    public function setCouponInfo($couponInfo)
    {
        $this->container['couponInfo'] = $couponInfo;

        return $this;
    }

    /**
     * Gets origTxnAmt
     *
     * @return float
     */
    public function getOrigTxnAmt()
    {
        return $this->container['origTxnAmt'];
    }

    /**
     * Sets origTxnAmt
     *
     * @param float $origTxnAmt 初始交易金额（原订单金额）
     *
     * @return $this
     */
    public function setOrigTxnAmt($origTxnAmt)
    {
        $this->container['origTxnAmt'] = $origTxnAmt;

        return $this;
    }

    /**
     * Gets totalRefundOrigTxnAmt
     *
     * @return float
     */
    public function getTotalRefundOrigTxnAmt()
    {
        return $this->container['totalRefundOrigTxnAmt'];
    }

    /**
     * Sets totalRefundOrigTxnAmt
     *
     * @param float $totalRefundOrigTxnAmt 申请退款总金额
     *
     * @return $this
     */
    public function setTotalRefundOrigTxnAmt($totalRefundOrigTxnAmt)
    {
        $this->container['totalRefundOrigTxnAmt'] = $totalRefundOrigTxnAmt;

        return $this;
    }

    /**
     * Gets refundTradeDetailList
     *
     * @return \Yeepay\Yop\Sdk\Service\Frontcashier\Model\UpopActivescanQuerypayresultRefundTradeDetailResponseDTOResult[]
     */
    public function getRefundTradeDetailList()
    {
        return $this->container['refundTradeDetailList'];
    }

    /**
     * Sets refundTradeDetailList
     *
     * @param \Yeepay\Yop\Sdk\Service\Frontcashier\Model\UpopActivescanQuerypayresultRefundTradeDetailResponseDTOResult[] $refundTradeDetailList 退款明细列表
     *
     * @return $this
     */
    public function setRefundTradeDetailList($refundTradeDetailList)
    {
        $this->container['refundTradeDetailList'] = $refundTradeDetailList;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


