<?php
/**
 * UpopActivescanQuerypayresultRefundTradeDetailResponseDTOResult
 *
 * PHP version 5
 *
 * @category Class
 * @package  Yeepay\Yop\Sdk\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 前置收银台
 *
 * <p>前置收银台</p>
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Yeepay\Yop\Sdk\Service\Frontcashier\Model;

use \ArrayAccess;
use Yeepay\Yop\Sdk\Model\ModelInterface;
use Yeepay\Yop\Sdk\Utils\ObjectSerializer;

/**
 * UpopActivescanQuerypayresultRefundTradeDetailResponseDTOResult Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  Yeepay\Yop\Sdk\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UpopActivescanQuerypayresultRefundTradeDetailResponseDTOResult implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'UpopActivescanQuerypayresultRefundTradeDetailResponseDTOResult';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'payOrderNo' => 'string',
        'refundAmount' => 'float',
        'refundOrderNo' => 'string',
        'status' => 'string',
        'createTime' => 'string',
        'refundCouponInfo' => 'string',
        'refundOrigTxnAmt' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'payOrderNo' => null,
        'refundAmount' => null,
        'refundOrderNo' => null,
        'status' => null,
        'createTime' => 'date-time',
        'refundCouponInfo' => null,
        'refundOrigTxnAmt' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'payOrderNo' => 'payOrderNo',
        'refundAmount' => 'refundAmount',
        'refundOrderNo' => 'refundOrderNo',
        'status' => 'status',
        'createTime' => 'createTime',
        'refundCouponInfo' => 'refundCouponInfo',
        'refundOrigTxnAmt' => 'refundOrigTxnAmt'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'payOrderNo' => 'setPayOrderNo',
        'refundAmount' => 'setRefundAmount',
        'refundOrderNo' => 'setRefundOrderNo',
        'status' => 'setStatus',
        'createTime' => 'setCreateTime',
        'refundCouponInfo' => 'setRefundCouponInfo',
        'refundOrigTxnAmt' => 'setRefundOrigTxnAmt'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'payOrderNo' => 'getPayOrderNo',
        'refundAmount' => 'getRefundAmount',
        'refundOrderNo' => 'getRefundOrderNo',
        'status' => 'getStatus',
        'createTime' => 'getCreateTime',
        'refundCouponInfo' => 'getRefundCouponInfo',
        'refundOrigTxnAmt' => 'getRefundOrigTxnAmt'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['payOrderNo'] = isset($data['payOrderNo']) ? $data['payOrderNo'] : null;
        $this->container['refundAmount'] = isset($data['refundAmount']) ? $data['refundAmount'] : null;
        $this->container['refundOrderNo'] = isset($data['refundOrderNo']) ? $data['refundOrderNo'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['createTime'] = isset($data['createTime']) ? $data['createTime'] : null;
        $this->container['refundCouponInfo'] = isset($data['refundCouponInfo']) ? $data['refundCouponInfo'] : null;
        $this->container['refundOrigTxnAmt'] = isset($data['refundOrigTxnAmt']) ? $data['refundOrigTxnAmt'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets payOrderNo
     *
     * @return string
     */
    public function getPayOrderNo()
    {
        return $this->container['payOrderNo'];
    }

    /**
     * Sets payOrderNo
     *
     * @param string $payOrderNo 付款订单号
     *
     * @return $this
     */
    public function setPayOrderNo($payOrderNo)
    {
        $this->container['payOrderNo'] = $payOrderNo;

        return $this;
    }

    /**
     * Gets refundAmount
     *
     * @return float
     */
    public function getRefundAmount()
    {
        return $this->container['refundAmount'];
    }

    /**
     * Sets refundAmount
     *
     * @param float $refundAmount 退款金额
     *
     * @return $this
     */
    public function setRefundAmount($refundAmount)
    {
        $this->container['refundAmount'] = $refundAmount;

        return $this;
    }

    /**
     * Gets refundOrderNo
     *
     * @return string
     */
    public function getRefundOrderNo()
    {
        return $this->container['refundOrderNo'];
    }

    /**
     * Sets refundOrderNo
     *
     * @param string $refundOrderNo 退款订单号
     *
     * @return $this
     */
    public function setRefundOrderNo($refundOrderNo)
    {
        $this->container['refundOrderNo'] = $refundOrderNo;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status 退款状态
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets createTime
     *
     * @return string
     */
    public function getCreateTime()
    {
        return $this->container['createTime'];
    }

    /**
     * Sets createTime
     *
     * @param string $createTime 退款时间
     *
     * @return $this
     */
    public function setCreateTime($createTime)
    {
        $this->container['createTime'] = $createTime;

        return $this;
    }

    /**
     * Gets refundCouponInfo
     *
     * @return string
     */
    public function getRefundCouponInfo()
    {
        return $this->container['refundCouponInfo'];
    }

    /**
     * Sets refundCouponInfo
     *
     * @param string $refundCouponInfo 退款营销信息
     *
     * @return $this
     */
    public function setRefundCouponInfo($refundCouponInfo)
    {
        $this->container['refundCouponInfo'] = $refundCouponInfo;

        return $this;
    }

    /**
     * Gets refundOrigTxnAmt
     *
     * @return float
     */
    public function getRefundOrigTxnAmt()
    {
        return $this->container['refundOrigTxnAmt'];
    }

    /**
     * Sets refundOrigTxnAmt
     *
     * @param float $refundOrigTxnAmt 申请退款金额（包含营销金额）
     *
     * @return $this
     */
    public function setRefundOrigTxnAmt($refundOrigTxnAmt)
    {
        $this->container['refundOrigTxnAmt'] = $refundOrigTxnAmt;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


