<?php
/**
 * BillFundbillFlowQueryFundBillFlowDetailDTOResult
 *
 * PHP version 5
 *
 * @category Class
 * @package  Yeepay\Yop\Sdk\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 标准版
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Yeepay\Yop\Sdk\Service\Std\Model;

use \ArrayAccess;
use Yeepay\Yop\Sdk\Model\ModelInterface;
use Yeepay\Yop\Sdk\Utils\ObjectSerializer;

/**
 * BillFundbillFlowQueryFundBillFlowDetailDTOResult Class Doc Comment
 *
 * @category Class
 * @package  Yeepay\Yop\Sdk\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BillFundbillFlowQueryFundBillFlowDetailDTOResult implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'BillFundbillFlowQueryFundBillFlowDetailDTOResult';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'accountTime' => 'string',
        'trxTime' => 'string',
        'trxFlowNo' => 'string',
        'trxCode' => 'string',
        'merchantNo' => 'string',
        'merchantName' => 'string',
        'orderId' => 'string',
        'fee' => 'float',
        'income' => 'float',
        'expenditure' => 'float',
        'balance' => 'float',
        'remark' => 'string',
        'accountType' => 'string',
        'orgOrderId' => 'string',
        'bankOrderId' => 'string',
        'paymentNo' => 'string',
        'payerAccountName' => 'string',
        'payerTel' => 'string',
        'payerAccountNo' => 'string',
        'payerBankAccType' => 'string',
        'payerBank' => 'string',
        'goodsName' => 'string',
        'payeeAccountName' => 'string',
        'payeeAccountNo' => 'string',
        'payeeBankAccType' => 'string',
        'payeeBank' => 'string',
        'tradeDesc' => 'string',
        'orderAmount' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'accountTime' => null,
        'trxTime' => null,
        'trxFlowNo' => null,
        'trxCode' => null,
        'merchantNo' => null,
        'merchantName' => null,
        'orderId' => null,
        'fee' => null,
        'income' => null,
        'expenditure' => null,
        'balance' => null,
        'remark' => null,
        'accountType' => null,
        'orgOrderId' => null,
        'bankOrderId' => null,
        'paymentNo' => null,
        'payerAccountName' => null,
        'payerTel' => null,
        'payerAccountNo' => null,
        'payerBankAccType' => null,
        'payerBank' => null,
        'goodsName' => null,
        'payeeAccountName' => null,
        'payeeAccountNo' => null,
        'payeeBankAccType' => null,
        'payeeBank' => null,
        'tradeDesc' => null,
        'orderAmount' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'accountTime' => 'accountTime',
        'trxTime' => 'trxTime',
        'trxFlowNo' => 'trxFlowNo',
        'trxCode' => 'trxCode',
        'merchantNo' => 'merchantNo',
        'merchantName' => 'merchantName',
        'orderId' => 'orderId',
        'fee' => 'fee',
        'income' => 'income',
        'expenditure' => 'expenditure',
        'balance' => 'balance',
        'remark' => 'remark',
        'accountType' => 'accountType',
        'orgOrderId' => 'orgOrderId',
        'bankOrderId' => 'bankOrderId',
        'paymentNo' => 'paymentNo',
        'payerAccountName' => 'payerAccountName',
        'payerTel' => 'payerTel',
        'payerAccountNo' => 'payerAccountNo',
        'payerBankAccType' => 'payerBankAccType',
        'payerBank' => 'payerBank',
        'goodsName' => 'goodsName',
        'payeeAccountName' => 'payeeAccountName',
        'payeeAccountNo' => 'payeeAccountNo',
        'payeeBankAccType' => 'payeeBankAccType',
        'payeeBank' => 'payeeBank',
        'tradeDesc' => 'tradeDesc',
        'orderAmount' => 'orderAmount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'accountTime' => 'setAccountTime',
        'trxTime' => 'setTrxTime',
        'trxFlowNo' => 'setTrxFlowNo',
        'trxCode' => 'setTrxCode',
        'merchantNo' => 'setMerchantNo',
        'merchantName' => 'setMerchantName',
        'orderId' => 'setOrderId',
        'fee' => 'setFee',
        'income' => 'setIncome',
        'expenditure' => 'setExpenditure',
        'balance' => 'setBalance',
        'remark' => 'setRemark',
        'accountType' => 'setAccountType',
        'orgOrderId' => 'setOrgOrderId',
        'bankOrderId' => 'setBankOrderId',
        'paymentNo' => 'setPaymentNo',
        'payerAccountName' => 'setPayerAccountName',
        'payerTel' => 'setPayerTel',
        'payerAccountNo' => 'setPayerAccountNo',
        'payerBankAccType' => 'setPayerBankAccType',
        'payerBank' => 'setPayerBank',
        'goodsName' => 'setGoodsName',
        'payeeAccountName' => 'setPayeeAccountName',
        'payeeAccountNo' => 'setPayeeAccountNo',
        'payeeBankAccType' => 'setPayeeBankAccType',
        'payeeBank' => 'setPayeeBank',
        'tradeDesc' => 'setTradeDesc',
        'orderAmount' => 'setOrderAmount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'accountTime' => 'getAccountTime',
        'trxTime' => 'getTrxTime',
        'trxFlowNo' => 'getTrxFlowNo',
        'trxCode' => 'getTrxCode',
        'merchantNo' => 'getMerchantNo',
        'merchantName' => 'getMerchantName',
        'orderId' => 'getOrderId',
        'fee' => 'getFee',
        'income' => 'getIncome',
        'expenditure' => 'getExpenditure',
        'balance' => 'getBalance',
        'remark' => 'getRemark',
        'accountType' => 'getAccountType',
        'orgOrderId' => 'getOrgOrderId',
        'bankOrderId' => 'getBankOrderId',
        'paymentNo' => 'getPaymentNo',
        'payerAccountName' => 'getPayerAccountName',
        'payerTel' => 'getPayerTel',
        'payerAccountNo' => 'getPayerAccountNo',
        'payerBankAccType' => 'getPayerBankAccType',
        'payerBank' => 'getPayerBank',
        'goodsName' => 'getGoodsName',
        'payeeAccountName' => 'getPayeeAccountName',
        'payeeAccountNo' => 'getPayeeAccountNo',
        'payeeBankAccType' => 'getPayeeBankAccType',
        'payeeBank' => 'getPayeeBank',
        'tradeDesc' => 'getTradeDesc',
        'orderAmount' => 'getOrderAmount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['accountTime'] = isset($data['accountTime']) ? $data['accountTime'] : null;
        $this->container['trxTime'] = isset($data['trxTime']) ? $data['trxTime'] : null;
        $this->container['trxFlowNo'] = isset($data['trxFlowNo']) ? $data['trxFlowNo'] : null;
        $this->container['trxCode'] = isset($data['trxCode']) ? $data['trxCode'] : null;
        $this->container['merchantNo'] = isset($data['merchantNo']) ? $data['merchantNo'] : null;
        $this->container['merchantName'] = isset($data['merchantName']) ? $data['merchantName'] : null;
        $this->container['orderId'] = isset($data['orderId']) ? $data['orderId'] : null;
        $this->container['fee'] = isset($data['fee']) ? $data['fee'] : null;
        $this->container['income'] = isset($data['income']) ? $data['income'] : null;
        $this->container['expenditure'] = isset($data['expenditure']) ? $data['expenditure'] : null;
        $this->container['balance'] = isset($data['balance']) ? $data['balance'] : null;
        $this->container['remark'] = isset($data['remark']) ? $data['remark'] : null;
        $this->container['accountType'] = isset($data['accountType']) ? $data['accountType'] : null;
        $this->container['orgOrderId'] = isset($data['orgOrderId']) ? $data['orgOrderId'] : null;
        $this->container['bankOrderId'] = isset($data['bankOrderId']) ? $data['bankOrderId'] : null;
        $this->container['paymentNo'] = isset($data['paymentNo']) ? $data['paymentNo'] : null;
        $this->container['payerAccountName'] = isset($data['payerAccountName']) ? $data['payerAccountName'] : null;
        $this->container['payerTel'] = isset($data['payerTel']) ? $data['payerTel'] : null;
        $this->container['payerAccountNo'] = isset($data['payerAccountNo']) ? $data['payerAccountNo'] : null;
        $this->container['payerBankAccType'] = isset($data['payerBankAccType']) ? $data['payerBankAccType'] : null;
        $this->container['payerBank'] = isset($data['payerBank']) ? $data['payerBank'] : null;
        $this->container['goodsName'] = isset($data['goodsName']) ? $data['goodsName'] : null;
        $this->container['payeeAccountName'] = isset($data['payeeAccountName']) ? $data['payeeAccountName'] : null;
        $this->container['payeeAccountNo'] = isset($data['payeeAccountNo']) ? $data['payeeAccountNo'] : null;
        $this->container['payeeBankAccType'] = isset($data['payeeBankAccType']) ? $data['payeeBankAccType'] : null;
        $this->container['payeeBank'] = isset($data['payeeBank']) ? $data['payeeBank'] : null;
        $this->container['tradeDesc'] = isset($data['tradeDesc']) ? $data['tradeDesc'] : null;
        $this->container['orderAmount'] = isset($data['orderAmount']) ? $data['orderAmount'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets accountTime
     *
     * @return string
     */
    public function getAccountTime()
    {
        return $this->container['accountTime'];
    }

    /**
     * Sets accountTime
     *
     * @param string $accountTime 记账时间
     *
     * @return $this
     */
    public function setAccountTime($accountTime)
    {
        $this->container['accountTime'] = $accountTime;

        return $this;
    }

    /**
     * Gets trxTime
     *
     * @return string
     */
    public function getTrxTime()
    {
        return $this->container['trxTime'];
    }

    /**
     * Sets trxTime
     *
     * @param string $trxTime 交易时间
     *
     * @return $this
     */
    public function setTrxTime($trxTime)
    {
        $this->container['trxTime'] = $trxTime;

        return $this;
    }

    /**
     * Gets trxFlowNo
     *
     * @return string
     */
    public function getTrxFlowNo()
    {
        return $this->container['trxFlowNo'];
    }

    /**
     * Sets trxFlowNo
     *
     * @param string $trxFlowNo 易宝流水号
     *
     * @return $this
     */
    public function setTrxFlowNo($trxFlowNo)
    {
        $this->container['trxFlowNo'] = $trxFlowNo;

        return $this;
    }

    /**
     * Gets trxCode
     *
     * @return string
     */
    public function getTrxCode()
    {
        return $this->container['trxCode'];
    }

    /**
     * Sets trxCode
     *
     * @param string $trxCode 业务类型
     *
     * @return $this
     */
    public function setTrxCode($trxCode)
    {
        $this->container['trxCode'] = $trxCode;

        return $this;
    }

    /**
     * Gets merchantNo
     *
     * @return string
     */
    public function getMerchantNo()
    {
        return $this->container['merchantNo'];
    }

    /**
     * Sets merchantNo
     *
     * @param string $merchantNo 商户编号
     *
     * @return $this
     */
    public function setMerchantNo($merchantNo)
    {
        $this->container['merchantNo'] = $merchantNo;

        return $this;
    }

    /**
     * Gets merchantName
     *
     * @return string
     */
    public function getMerchantName()
    {
        return $this->container['merchantName'];
    }

    /**
     * Sets merchantName
     *
     * @param string $merchantName 商户名称
     *
     * @return $this
     */
    public function setMerchantName($merchantName)
    {
        $this->container['merchantName'] = $merchantName;

        return $this;
    }

    /**
     * Gets orderId
     *
     * @return string
     */
    public function getOrderId()
    {
        return $this->container['orderId'];
    }

    /**
     * Sets orderId
     *
     * @param string $orderId 商户订单号
     *
     * @return $this
     */
    public function setOrderId($orderId)
    {
        $this->container['orderId'] = $orderId;

        return $this;
    }

    /**
     * Gets fee
     *
     * @return float
     */
    public function getFee()
    {
        return $this->container['fee'];
    }

    /**
     * Sets fee
     *
     * @param float $fee 手续费
     *
     * @return $this
     */
    public function setFee($fee)
    {
        $this->container['fee'] = $fee;

        return $this;
    }

    /**
     * Gets income
     *
     * @return float
     */
    public function getIncome()
    {
        return $this->container['income'];
    }

    /**
     * Sets income
     *
     * @param float $income 收入
     *
     * @return $this
     */
    public function setIncome($income)
    {
        $this->container['income'] = $income;

        return $this;
    }

    /**
     * Gets expenditure
     *
     * @return float
     */
    public function getExpenditure()
    {
        return $this->container['expenditure'];
    }

    /**
     * Sets expenditure
     *
     * @param float $expenditure 支出
     *
     * @return $this
     */
    public function setExpenditure($expenditure)
    {
        $this->container['expenditure'] = $expenditure;

        return $this;
    }

    /**
     * Gets balance
     *
     * @return float
     */
    public function getBalance()
    {
        return $this->container['balance'];
    }

    /**
     * Sets balance
     *
     * @param float $balance 账户余额
     *
     * @return $this
     */
    public function setBalance($balance)
    {
        $this->container['balance'] = $balance;

        return $this;
    }

    /**
     * Gets remark
     *
     * @return string
     */
    public function getRemark()
    {
        return $this->container['remark'];
    }

    /**
     * Sets remark
     *
     * @param string $remark 备注
     *
     * @return $this
     */
    public function setRemark($remark)
    {
        $this->container['remark'] = $remark;

        return $this;
    }

    /**
     * Gets accountType
     *
     * @return string
     */
    public function getAccountType()
    {
        return $this->container['accountType'];
    }

    /**
     * Sets accountType
     *
     * @param string $accountType 账户类型
     *
     * @return $this
     */
    public function setAccountType($accountType)
    {
        $this->container['accountType'] = $accountType;

        return $this;
    }

    /**
     * Gets orgOrderId
     *
     * @return string
     */
    public function getOrgOrderId()
    {
        return $this->container['orgOrderId'];
    }

    /**
     * Sets orgOrderId
     *
     * @param string $orgOrderId 原商户订单号
     *
     * @return $this
     */
    public function setOrgOrderId($orgOrderId)
    {
        $this->container['orgOrderId'] = $orgOrderId;

        return $this;
    }

    /**
     * Gets bankOrderId
     *
     * @return string
     */
    public function getBankOrderId()
    {
        return $this->container['bankOrderId'];
    }

    /**
     * Sets bankOrderId
     *
     * @param string $bankOrderId 银行单号
     *
     * @return $this
     */
    public function setBankOrderId($bankOrderId)
    {
        $this->container['bankOrderId'] = $bankOrderId;

        return $this;
    }

    /**
     * Gets paymentNo
     *
     * @return string
     */
    public function getPaymentNo()
    {
        return $this->container['paymentNo'];
    }

    /**
     * Sets paymentNo
     *
     * @param string $paymentNo 支付单号
     *
     * @return $this
     */
    public function setPaymentNo($paymentNo)
    {
        $this->container['paymentNo'] = $paymentNo;

        return $this;
    }

    /**
     * Gets payerAccountName
     *
     * @return string
     */
    public function getPayerAccountName()
    {
        return $this->container['payerAccountName'];
    }

    /**
     * Sets payerAccountName
     *
     * @param string $payerAccountName 付款方账户名称
     *
     * @return $this
     */
    public function setPayerAccountName($payerAccountName)
    {
        $this->container['payerAccountName'] = $payerAccountName;

        return $this;
    }

    /**
     * Gets payerTel
     *
     * @return string
     */
    public function getPayerTel()
    {
        return $this->container['payerTel'];
    }

    /**
     * Sets payerTel
     *
     * @param string $payerTel 付款方手机号
     *
     * @return $this
     */
    public function setPayerTel($payerTel)
    {
        $this->container['payerTel'] = $payerTel;

        return $this;
    }

    /**
     * Gets payerAccountNo
     *
     * @return string
     */
    public function getPayerAccountNo()
    {
        return $this->container['payerAccountNo'];
    }

    /**
     * Sets payerAccountNo
     *
     * @param string $payerAccountNo 付款方账号
     *
     * @return $this
     */
    public function setPayerAccountNo($payerAccountNo)
    {
        $this->container['payerAccountNo'] = $payerAccountNo;

        return $this;
    }

    /**
     * Gets payerBankAccType
     *
     * @return string
     */
    public function getPayerBankAccType()
    {
        return $this->container['payerBankAccType'];
    }

    /**
     * Sets payerBankAccType
     *
     * @param string $payerBankAccType 付款方账户类型
     *
     * @return $this
     */
    public function setPayerBankAccType($payerBankAccType)
    {
        $this->container['payerBankAccType'] = $payerBankAccType;

        return $this;
    }

    /**
     * Gets payerBank
     *
     * @return string
     */
    public function getPayerBank()
    {
        return $this->container['payerBank'];
    }

    /**
     * Sets payerBank
     *
     * @param string $payerBank 付款方银行
     *
     * @return $this
     */
    public function setPayerBank($payerBank)
    {
        $this->container['payerBank'] = $payerBank;

        return $this;
    }

    /**
     * Gets goodsName
     *
     * @return string
     */
    public function getGoodsName()
    {
        return $this->container['goodsName'];
    }

    /**
     * Sets goodsName
     *
     * @param string $goodsName 商品名称
     *
     * @return $this
     */
    public function setGoodsName($goodsName)
    {
        $this->container['goodsName'] = $goodsName;

        return $this;
    }

    /**
     * Gets payeeAccountName
     *
     * @return string
     */
    public function getPayeeAccountName()
    {
        return $this->container['payeeAccountName'];
    }

    /**
     * Sets payeeAccountName
     *
     * @param string $payeeAccountName 收款方账户名称
     *
     * @return $this
     */
    public function setPayeeAccountName($payeeAccountName)
    {
        $this->container['payeeAccountName'] = $payeeAccountName;

        return $this;
    }

    /**
     * Gets payeeAccountNo
     *
     * @return string
     */
    public function getPayeeAccountNo()
    {
        return $this->container['payeeAccountNo'];
    }

    /**
     * Sets payeeAccountNo
     *
     * @param string $payeeAccountNo 收款方账号
     *
     * @return $this
     */
    public function setPayeeAccountNo($payeeAccountNo)
    {
        $this->container['payeeAccountNo'] = $payeeAccountNo;

        return $this;
    }

    /**
     * Gets payeeBankAccType
     *
     * @return string
     */
    public function getPayeeBankAccType()
    {
        return $this->container['payeeBankAccType'];
    }

    /**
     * Sets payeeBankAccType
     *
     * @param string $payeeBankAccType 收款方账户类型
     *
     * @return $this
     */
    public function setPayeeBankAccType($payeeBankAccType)
    {
        $this->container['payeeBankAccType'] = $payeeBankAccType;

        return $this;
    }

    /**
     * Gets payeeBank
     *
     * @return string
     */
    public function getPayeeBank()
    {
        return $this->container['payeeBank'];
    }

    /**
     * Sets payeeBank
     *
     * @param string $payeeBank 收款方银行
     *
     * @return $this
     */
    public function setPayeeBank($payeeBank)
    {
        $this->container['payeeBank'] = $payeeBank;

        return $this;
    }

    /**
     * Gets tradeDesc
     *
     * @return string
     */
    public function getTradeDesc()
    {
        return $this->container['tradeDesc'];
    }

    /**
     * Sets tradeDesc
     *
     * @param string $tradeDesc 交易描述
     *
     * @return $this
     */
    public function setTradeDesc($tradeDesc)
    {
        $this->container['tradeDesc'] = $tradeDesc;

        return $this;
    }

    /**
     * Gets orderAmount
     *
     * @return float
     */
    public function getOrderAmount()
    {
        return $this->container['orderAmount'];
    }

    /**
     * Sets orderAmount
     *
     * @param float $orderAmount 交易金额
     *
     * @return $this
     */
    public function setOrderAmount($orderAmount)
    {
        $this->container['orderAmount'] = $orderAmount;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


